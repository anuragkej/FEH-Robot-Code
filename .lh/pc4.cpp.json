{
    "sourceFile": "pc4.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1711386347176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711386378715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,5 +18,6 @@\n FEHMotor flm(FEHMotor::Motor0, 7.0);\n FEHMotor frm(FEHMotor::Motor2, 7.0);\n \n int main()\n-{}\n\\ No newline at end of file\n+{\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1711386575212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,5 +19,125 @@\n FEHMotor frm(FEHMotor::Motor2, 7.0);\n \n int main()\n {\n-}\n\\ No newline at end of file\n+\n+    // Initialize the RCS\n+    RCS.InitializeTouchMenu(\"E6aMLIy03\");\n+\n+    // Get correct lever from the RCS\n+    int correctLever = RCS.GetCorrectLever();\n+\n+    FEHServo s1(FEHServo::Servo7);\n+\n+    s1.SetMin(500);\n+    s1.SetMax(2277);\n+\n+    AnalogInputPin light(FEHIO::P2_7);\n+\n+    while (light.Value() > 0.9)\n+        ;\n+\n+    // forward out of start\n+    driveForward(0.7, 100);\n+\n+    Sleep(0.25);\n+\n+    // slight left\n+    turn('L', 0.9, 100, 25);\n+\n+    s1.SetDegree(110);\n+\n+    // Check which lever to flip and perform some action\n+    if (correctLever == 0)\n+    {\n+        // Perform actions to flip left lever\n+\n+        // horziontally towrads ramp\n+        driveForward(0.26, -100);\n+\n+        /*// 90 degree turn\n+        turn('L', 0.75, 100, -100);\n+\n+        driveForward(0.2, 100);*/\n+\n+        Sleep(0.5);\n+\n+        s1.SetDegree(100);\n+\n+        Sleep(5.0);\n+\n+        s1.SetDegree(135);\n+    }\n+    else if (correctLever == 1)\n+    {\n+\n+        // horziontally towards ramp\n+        driveForward(0.0625, 100);\n+\n+        /*// 90 degree turn\n+        turn('L', 0.75, 100, -100);\n+\n+        driveForward(0.2, 100);*/\n+\n+        Sleep(0.5);\n+\n+        s1.SetDegree(100);\n+\n+        Sleep(5.0);\n+\n+        s1.SetDegree(135);\n+    }\n+    else if (correctLever == 2)\n+    {\n+        // horziontally towards ramp\n+        driveForward(0.33, 100);\n+\n+        /*// 90 degree turn\n+        turn('L', 0.75, 100, -100);\n+\n+        driveForward(0.2, 100);*/\n+\n+        Sleep(0.5);\n+\n+        s1.SetDegree(100);\n+\n+        Sleep(5.0);\n+\n+        s1.SetDegree(135);\n+    }\n+}\n+void driveForward(float time, int percent)\n+{\n+    frm.SetPercent(percent);\n+    flm.SetPercent(percent);\n+    brm.SetPercent(percent);\n+    blm.SetPercent(percent);\n+    Sleep(time);\n+    frm.SetPercent(0);\n+    flm.SetPercent(0);\n+    brm.SetPercent(0);\n+    blm.SetPercent(0);\n+}\n+\n+void turn(char direction, float time, int dominant_motor_percent, int nondom_motor_percent)\n+{\n+    if (direction == 'L')\n+    {\n+        frm.SetPercent(dominant_motor_percent);\n+        flm.SetPercent(nondom_motor_percent);\n+        brm.SetPercent(dominant_motor_percent);\n+        blm.SetPercent(nondom_motor_percent);\n+    }\n+    else if (direction == 'R')\n+    {\n+        frm.SetPercent(nondom_motor_percent);\n+        flm.SetPercent(dominant_motor_percent);\n+        brm.SetPercent(nondom_motor_percent);\n+        blm.SetPercent(dominant_motor_percent);\n+    }\n+    Sleep(time);\n+    frm.SetPercent(0);\n+    flm.SetPercent(0);\n+    brm.SetPercent(0);\n+    blm.SetPercent(0);\n+}\n"
                },
                {
                    "date": 1711386745407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n #include <FEHIO.h>\n #include <FEHLCD.h>\n #include <FEHServo.h>\n #include <FEHRCS.h>\n+#include <FEHBattery.h>\n \n // Servo Max: 2277\n // Servo Min: 500\n \n@@ -107,8 +108,10 @@\n     }\n }\n void driveForward(float time, int percent)\n {\n+    float adjustedpercent;\n+    adjustedpercent = (percent/Battery.Voltage())\n     frm.SetPercent(percent);\n     flm.SetPercent(percent);\n     brm.SetPercent(percent);\n     blm.SetPercent(percent);\n"
                },
                {
                    "date": 1711388077857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,14 +38,14 @@\n     while (light.Value() > 0.9)\n         ;\n \n     // forward out of start\n-    driveForward(0.7, 100);\n+    driveForward(0.7, 70);\n \n     Sleep(0.25);\n \n     // slight left\n-    turn('L', 0.9, 100, 25);\n+    turn('L', 0.9, 60, 15);\n \n     s1.SetDegree(110);\n \n     // Check which lever to flip and perform some action\n@@ -53,9 +53,9 @@\n     {\n         // Perform actions to flip left lever\n \n         // horziontally towrads ramp\n-        driveForward(0.26, -100);\n+        driveForward(0.26, -70);\n \n         /*// 90 degree turn\n         turn('L', 0.75, 100, -100);\n \n@@ -64,17 +64,23 @@\n         Sleep(0.5);\n \n         s1.SetDegree(100);\n \n-        Sleep(5.0);\n+        Sleep(5.1);\n \n         s1.SetDegree(135);\n+\n+        Sleep(0.5);\n+\n+        s1.SetDegree(110);\n+\n+        driveForward(0.59,70);\n     }\n     else if (correctLever == 1)\n     {\n \n         // horziontally towards ramp\n-        driveForward(0.0625, 100);\n+        driveForward(0.0625, 70);\n \n         /*// 90 degree turn\n         turn('L', 0.75, 100, -100);\n \n@@ -83,16 +89,22 @@\n         Sleep(0.5);\n \n         s1.SetDegree(100);\n \n-        Sleep(5.0);\n+        Sleep(5.1);\n \n         s1.SetDegree(135);\n+\n+        Sleep(0.5);\n+\n+        s1.SetDegree(110);\n+\n+        driveForward(0.2675,70);\n     }\n     else if (correctLever == 2)\n     {\n         // horziontally towards ramp\n-        driveForward(0.33, 100);\n+        driveForward(0.33, 70);\n \n         /*// 90 degree turn\n         turn('L', 0.75, 100, -100);\n \n@@ -101,21 +113,137 @@\n         Sleep(0.5);\n \n         s1.SetDegree(100);\n \n-        Sleep(5.0);\n+        Sleep(5.1);\n \n         s1.SetDegree(135);\n+\n+        Sleep(0.5);\n+\n+        s1.SetDegree(110);\n+\n     }\n+\n+    driveForward(0.25,70);\n+\n+    turn('R',0.7,70,-70);\n+\n+    // up ramp\n+    driveForward(2.0, 70);\n+\n+    // slight right\n+    turn('R', 0.26, 70, -35);\n+\n+    /*// drive to boarding pass station\n+    driveForward(1.2, 100);\n+\n+    // slight left\n+    turn('L', 0.15, 100, -50);*/\n+\n+    frm.SetPercent(25);\n+    flm.SetPercent(25);\n+    brm.SetPercent(25);\n+    blm.SetPercent(25);\n+\n+    while (light.Value() > 2.0)\n+        ;\n+\n+    button = light.Value();\n+\n+    /*float t = TimeNow();\n+\n+    while (light.Value() < 1.7)\n+    {\n+\n+        frm.SetPercent(0);\n+        flm.SetPercent(0);\n+        brm.SetPercent(0);\n+        blm.SetPercent(0);\n+\n+        button = 1.5;\n+\n+        if (TimeNow() - t > 2.0)\n+        {\n+            break;\n+        }\n+    }\n+\n+    t = TimeNow();\n+\n+    while (light.Value() < 1.97)\n+    {\n+        frm.SetPercent(0);\n+        flm.SetPercent(0);\n+        brm.SetPercent(0);\n+        blm.SetPercent(0);\n+\n+        button = 1.5;\n+\n+        if (TimeNow() - t > 2.0)\n+        {\n+            break;\n+        }\n+    }*/\n+\n+    Sleep(0.5);\n+\n+    LCD.WriteLine(button);\n+\n+    if (button < 0.9)\n+    {\n+        LCD.WriteLine(\"RED\");\n+        driveForward(0.4, -70);\n+        turn('R', 0.41, 70, -70);\n+        driveForward(1.05, 70);\n+        turn('L', 0.54, 70, -70);\n+        driveForward(0.5, 70);\n+    }\n+    else\n+    {\n+        LCD.WriteLine(\"BLUE\");\n+        driveForward(0.4, -70);\n+        turn('R', 0.41, 70, -70);\n+        driveForward(0.63, 70);\n+        turn('L', 0.54, 70, -70);\n+        driveForward(0.5, 70);\n+    }\n+\n+    // back up\n+    driveForward(1.5, -70);\n+\n+    if (button < 0.9)\n+    {\n+        // wide right\n+        turn('R', 0.55, 70, -70);\n+        // drive towards ramp\n+        driveForward(0.4, 70);\n+        turn('R', 0.82, 70, -70);\n+    }\n+    else\n+    {\n+        // wide right\n+        turn('R', 0.55, 70, -70);\n+        // drive towards ramp\n+        driveForward(0.98, 70);\n+        turn('R', 0.82, 70, -70);\n+    }\n+\n+    // go down ramp\n+    driveForward(2.3, 70);\n+\n+\n+\n+\n }\n void driveForward(float time, int percent)\n {\n     float adjustedpercent;\n-    adjustedpercent = (percent / Battery.Voltage())\n-                          frm.SetPercent(percent);\n-    flm.SetPercent(percent);\n-    brm.SetPercent(percent);\n-    blm.SetPercent(percent);\n+    adjustedpercent = (11.5 / Battery.Voltage()) * percent;\n+    frm.SetPercent(adjustedpercent);\n+    flm.SetPercent(adjustedpercent);\n+    brm.SetPercent(adjustedpercent);\n+    blm.SetPercent(adjustedpercent);\n     Sleep(time);\n     frm.SetPercent(0);\n     flm.SetPercent(0);\n     brm.SetPercent(0);\n@@ -123,21 +251,25 @@\n }\n \n void turn(char direction, float time, int dominant_motor_percent, int nondom_motor_percent)\n {\n+\n+float adj_dominant_motor_percent = (11.5 / Battery.Voltage()) * dominant_motor_percent;\n+float adj_nondom_motor_percent = (11.5 / Battery.Voltage()) * nondom_motor_percent\n+\n     if (direction == 'L')\n     {\n-        frm.SetPercent(dominant_motor_percent);\n-        flm.SetPercent(nondom_motor_percent);\n-        brm.SetPercent(dominant_motor_percent);\n-        blm.SetPercent(nondom_motor_percent);\n+        frm.SetPercent(adj_dominant_motor_percent);\n+        flm.SetPercent(adj_nondom_motor_percent);\n+        brm.SetPercent(adj_dominant_motor_percent);\n+        blm.SetPercent(adj_nondom_motor_percent);\n     }\n     else if (direction == 'R')\n     {\n-        frm.SetPercent(nondom_motor_percent);\n-        flm.SetPercent(dominant_motor_percent);\n-        brm.SetPercent(nondom_motor_percent);\n-        blm.SetPercent(dominant_motor_percent);\n+        frm.SetPercent(adj_nondom_motor_percent);\n+        flm.SetPercent(adj_dominant_motor_percent);\n+        brm.SetPercent(adj_nondom_motor_percent);\n+        blm.SetPercent(adj_dominant_motor_percent);\n     }\n     Sleep(time);\n     frm.SetPercent(0);\n     flm.SetPercent(0);\n"
                },
                {
                    "date": 1711388155272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,9 +250,9 @@\n \n     float adj_dominant_motor_percent = (11.5 / Battery.Voltage()) * dominant_motor_percent;\n     float adj_nondom_motor_percent = (11.5 / Battery.Voltage()) * nondom_motor_percent\n \n-                                     if (direction == 'L')\n+    if (direction == 'L')\n     {\n         frm.SetPercent(adj_dominant_motor_percent);\n         flm.SetPercent(adj_nondom_motor_percent);\n         brm.SetPercent(adj_dominant_motor_percent);\n"
                }
            ],
            "date": 1711386347176,
            "name": "Commit-0",
            "content": "#include <FEHUtility.h>\n#include <FEHMotor.h>\n#include <FEHIO.h>\n#include <FEHLCD.h>\n#include <FEHServo.h>\n#include <FEHRCS.h>\n\n// Servo Max: 2277\n// Servo Min: 500\n\nvoid driveForward(float time, int percent);\nvoid turn(char direction, float time, int dominant_motor_percent, int nondom_motor_percent);\n// declare motor on motor port 0, set maximum voltage to 9.0 V\n// right motor is inversed (i.e, driving forward, RM would be at a negative percent)\n\nFEHMotor blm(FEHMotor::Motor1, 7.0);\nFEHMotor brm(FEHMotor::Motor3, 7.0);\nFEHMotor flm(FEHMotor::Motor0, 7.0);\nFEHMotor frm(FEHMotor::Motor2, 7.0);\n\nint main()\n{}"
        }
    ]
}